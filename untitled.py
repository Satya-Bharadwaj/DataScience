# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h9nHmOM3SDUPj4ZrKZUln2hWPwAfZJZE
"""

#import statements
import os
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split

#load data
from google.colab import drive
base_path = '/content/drive'
drive.mount(base_path)

data_path = os.path.join(base_path, 'My Drive/MSIT423/HW2')
data = pd.read_csv(os.path.join(data_path, 'test_sample.csv'))

#data variables
import statsmodels.api as sm

y = data['Y']
X = data.drop(columns=['Y'])

#LassoCV
from sklearn.linear_model import LassoCV, Lasso

dataCV = LassoCV(cv = 5, random_state = 1)
dataCV.fit(X,y)

#Find alpha min
alpha_min = dataCV.alpha_
print("Minumum value of alpha:",alpha_min)

#perform Lasso regression with alpha min
out = Lasso(alpha = alpha_min)
out.fit(X,y)
#Lasso coefficients
coefs = []
coefs.append(out.coef_)

print(coefs)

#Find the eliminated coefficients
eliminated_by_lasso = np.where(out.coef_ == 0)[0]

print(eliminated_by_lasso)

#Linear Regression
X = sm.add_constant(X)
allPredictors_lm = sm.OLS(y,X).fit()
#Find the coefficients that should be eleminated; p > 0.1
eliminated_by_lm = np.where(allPredictors_lm.pvalues[1:] > 0.05)[0] #checking for greater than 0.05 because two-sided
print(eliminated_by_lm)

"""OLS"""

lasso_zeros = ' '.join([str(idx) for idx in eliminated_by_lasso])
lm_zeros = ' '.join([str(idx) for idx in eliminated_by_lm])
pd.DataFrame([lasso_zeros,lm_zeros], index = ['eliminated_by_Lasso','eliminated_by_lm']).to_csv('answer.csv')

print(lasso_zeros)
print(lm_zeros)

from google.colab import files

#Download the file
files.download('answer.csv')